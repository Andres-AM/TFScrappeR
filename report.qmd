---
title: "Swiss Federal Tribunal case laws summary (published)"
format:
  html:
    toc: true
---
 
```{r}
#| echo: false
#| include: false

source("libraries.R")
library(knitr)
library(kableExtra)

dfr <- read_delim("data/240508_results.csv", delim = ";",show_col_types = F)

## To add to script
dfr <- dfr %>% 
  mutate( language = as.factor(case_when( 
    str_detect(decision,"Urteil") ~ "Deutsch",
    str_detect(decision,"Arrêt") ~ "Français",
    str_detect(decision,"Sentenza") ~ "Italiano",
    TRUE ~ "No language found",
  )),
  reference = paste0("<a href=",url,">",reference,"</a>"),
  topic = as.factor(type)
  )

df1 <- dfr %>%
  select(date,language,topic,reference,summary) %>% 
  select(-summary) %>% 
  # slice(1:10) %>% 
  arrange(language,topic)




```

# Introduction

Summary of Swiss Federal Tribunal case laws grouped by language.

```{r}
#| results: "asis"
#| echo: false

t <- df1 %>% 
  # select(-summary) %>% 
  DT::datatable(
    options = list(
      # paging = F, 
      # pageLength = 10,
      dom = "t",
      scrollY = TRUE),
    rownames = FALSE,
    filter = "top",
    escape = F)

t
```



```{r}
#| echo: false
#| results: "asis"

print_decision <- function(i = i, df = df) {
  
  df_table <- df[i,]
  
    if (i == 1 || df_table$language != df[i - 1,]$language) {
    cat(paste0("# ", df_table$language, "\n\n"))
  }
  
  if (i == 1 || df_table$topic != df[i - 1,]$topic) {
    cat(paste0("## ", df_table$topic, "\n\n"))
  }
  
  cat(paste0("### ",df_table$reference,"\n\n"))
  
  df_table %>% 
    select(date,language,topic,reference,url)  %>% 
    # kbl(format = "html",position = "center", booktabs = T) %>% 
    kable(caption = "test",align = "c") %>% print()
  
    # 
    # print()
    # 
  cat(paste0(
    "\n\n**Summary**: ",df_table$summary,
    "\n\n"
  )
  )
}

# a <- map(.x = 1:nrow(df1),
#          .f = print_decision,
#          df = df1
#          )

```




```{r}
#| echo: false
#| results: "asis"



#
# arguments <- list(df = df1)
# language <- c("FR","DE","IT")
# topic <- c(unique(dfr$topic))
# vec <- 1:nrow(df1)
# 
# per_language <- function(df, j = j){
#   
#   df1 <- df %>% 
#     filter(language == j)
#   
# }
# b <- map(
#   list(language,vec),
#   test_fun
#   # .l = arguments
# )
# 
# b







# # Create a data frame with 20 rows as per your specifications
# data <- data.frame(
#   language = sample(c("FR", "DE", "IT"), 20, replace = TRUE),
#   topic = sample(c("A", "B", "C", "D"), 20, replace = TRUE),
#   value = sample(1:100, 20, replace = TRUE)
# )
# 
# # Arrange the data by language and topic
# data <- data %>% arrange(language, topic)
# 
# # Group the data by language and topic, then concatenate the values within each group
# result <- data %>%
#   group_by(language, topic) %>%
#   summarize(values = paste(value, collapse = ", ")) %>%
#   ungroup()
# 
# # Display the result
# print(result)
# 
# data

```

